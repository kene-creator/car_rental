scalar DateTime

type Car {
  id: String!
  thumbnailSrc: String!
  name: String!
  gearType: String!
  gasTank: String!
  passenger: String!
  dailyPrice: String!
  monthlyPrice: String!
  discountPrice: String
  vehicle: String!
  createdAt: DateTime
  updatedAt: String
}

type PopularCar {
  id: String!
  thumbnailSrc: String!
  name: String!
  gearType: String!
  gasTank: String!
  passenger: String!
  dailyPrice: String!
  monthlyPrice: String!
  discountPrice: String
  vehicle: String!
  createdAt: DateTime
  updatedAt: String
}

input NewCar {
  thumbnailSrc: String!
  name: String!
  gearType: String!
  gasTank: String!
  passenger: String!
  dailyPrice: String!
  monthlyPrice: String!
  discountPrice: String!
  vehicle: String!
}

input UpdateCar {
  id: ID!
  thumbnailSrc: String!
  name: String!
  gearType: String!
  gasTank: String!
  passenger: String!
  dailyPrice: String!
  monthlyPrice: String!
  discountPrice: String!
  vehicle: String!
  mileage: String!
}

type Query {
  cars(offset: Int!): [Car!]!
  popular_cars: [PopularCar!]!
  popular_car(id: ID!): PopularCar!
  car(id: ID!): Car!
}

type Mutation {
  createCar(input: NewCar!): Car!
  updateCar(input: UpdateCar!): Car!
  deleteCar(id: ID!): Car!
}
